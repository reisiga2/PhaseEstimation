function [gNew,gGen]=testGammaD1%Arne Leijon 2010-07-08c='rbgk';%state color coding, max 4 states%make a simple array of GammaD:sgGen(1)=GammaD(3,2);gGen(2)=GammaD(4,3);%Make a big training data sequence:x1=gamrnd(gGen(1).Shape,gGen(1).Scale,1,100);x2=gamrnd(gGen(2).Shape,gGen(2).Scale,1,100);xTraining=[x1,x2];gNew=gGen.init(xTraining);xPlot=(0:0.1:40);for nTraining=1:20    figure;    [p,lS]=gGen.prob(xPlot);    plot(xPlot,p*exp(lS),'LineWidth',2);hold on;    [p,lS]=gNew.prob(xPlot);    plot(xPlot,p*exp(lS),'LineWidth',1);hold off;    %     plotTraining(xTraining,sT,c);%     %also plot error points, as classified by viterbi...%     plotCross(hNew.Gaussians,[1 2],c);%  	axis([-10 10 -10 10]);% 	hold off;%	pause;    %one training step:    aS=adaptStart(gNew);        aS=adaptAccum(gNew,aS,xTraining);    gNew=adaptSet(gNew,aS);end;%finally% mixWeight=hNew.MixWeight;% display(mixWeight);%more smooth than original weights!!!% function plotTraining(xT,sT,c)% nStates=max(sT);% for s=1:nStates%     plot(xT(1,sT==s),xT(2,sT==s),['o',c(s)],'MarkerSize',1.5);%     hold on;% end;